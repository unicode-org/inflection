/*
 * Copyright 2017-2024 Apple Inc. All rights reserved.
 */
#include "catch2/catch_test_macros.hpp"

#include <inflection/lang/StringFilterUtil.hpp>
#include <inflection/util/LocaleUtils.hpp>
#include <inflection/npc.hpp>

TEST_CASE("StringFilterUtilTest#testHasCJKCharacter")
{
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"abc„Å´„ÅÇ„Çã"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"„Å´„ÅÇ„Çã"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"„Å´„ÅÇ„Çãabc"));
    REQUIRE(!::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"abc"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"üê∞„Çã"));
    REQUIRE(!::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"üê∞"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"abcÂú®"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"Âú®"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"Âú®a"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"üê∞Âú®"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"Í∑ºÏ≤ò"));
    REQUIRE(::inflection::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(u"‡∏Å"));
}

TEST_CASE("StringFilterUtilTest#testIsFirstCJKCharacter")
{
    REQUIRE(!::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"abc„Å´„ÅÇ„Çã"));
    REQUIRE(::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"„Å´„ÅÇ„Çã"));
    REQUIRE(::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"„Å´"));
    REQUIRE(!::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"MicheleË©±"));
    REQUIRE(::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"„Å´„ÅÇ„Çãabc"));
    REQUIRE(!::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"a"));
    REQUIRE(::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"°ëÆ"));
    REQUIRE(!::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"üê∞„Çã"));
    REQUIRE(!::inflection::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(u"üê∞"));
}

TEST_CASE("StringFilterUtilTest#testEnglishUnaccent")
{
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"a"));
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"\u0300").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"√°"));
    REQUIRE(u"ab" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"\u0300√°b"));
    REQUIRE(u"abüê∞c" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"√°büê∞c"));
    REQUIRE(u"Sao Paulo" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"S√£o Paulo"));
    REQUIRE(u"Munchen" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"M√ºnchen"));
    REQUIRE(u"resume" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"r√©sum√©"));
    REQUIRE(u"Francois" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"Fran√ßois"));
    REQUIRE(u"Êù±‰∫¨" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::US(), u"Êù±‰∫¨"));
}

TEST_CASE("StringFilterUtilTest#testGermanUnaccent")
{
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"a"));
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"\u0300").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"√°"));
    REQUIRE(u"ab" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"\u0300√°b"));
    REQUIRE(u"abüê∞c" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"√°büê∞c"));
    REQUIRE(u"Sao Paulo" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"S√£o Paulo"));
    REQUIRE(u"M√ºnchen" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"M√ºnchen"));
    REQUIRE(u"resume" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"r√©sum√©"));
    REQUIRE(u"Francois" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::GERMANY(), u"Fran√ßois"));
}

TEST_CASE("StringFilterUtilTest#testFrenchUnaccent")
{
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"a"));
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"\u0300").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"√°"));
    REQUIRE(u"ab" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"\u0300√°b"));
    REQUIRE(u"abüê∞c" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"√°büê∞c"));
    REQUIRE(u"Sao Paulo" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"S√£o Paulo"));
    REQUIRE(u"M√ºnchen" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"M√ºnchen"));
    REQUIRE(u"r√©sum√©" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"r√©sum√©"));
    REQUIRE(u"Fran√ßois" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::FRANCE(), u"Fran√ßois"));
}

TEST_CASE("StringFilterUtilTest#testJapaneseUnaccent")
{
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"a"));
    REQUIRE(::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"\u0300").empty());
    REQUIRE(u"a" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"√°"));
    REQUIRE(u"ab" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"\u0300√°b"));
    REQUIRE(u"abüê∞c" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"√°büê∞c"));
    REQUIRE(u"Sao Paulo" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"S√£o Paulo"));
    REQUIRE(u"Munchen" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"M√ºnchen"));
    REQUIRE(u"resume" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"r√©sum√©"));
    REQUIRE(u"Francois" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"Fran√ßois"));
    REQUIRE(u"Êù±‰∫¨" == ::inflection::lang::StringFilterUtil::stripNonNativeAccents(::inflection::util::LocaleUtils::JAPAN(), u"Êù±‰∫¨"));
}

TEST_CASE("StringFilterUtilTest#testUnaccent")
{
    ::std::u16string result;
    REQUIRE(npc(::inflection::lang::StringFilterUtil::unaccent(&result, u""))->empty());
    REQUIRE(u"a" == *npc(::inflection::lang::StringFilterUtil::unaccent(&result, u"a")));
    REQUIRE(npc(::inflection::lang::StringFilterUtil::unaccent(&result, u"\u0300"))->empty());
    REQUIRE(u"a" == *npc(::inflection::lang::StringFilterUtil::unaccent(&result, u"√°")));
    REQUIRE(u"ab" == *npc(::inflection::lang::StringFilterUtil::unaccent(&result, u"\u0300√°b")));
    REQUIRE(u"abüê∞c" == *npc(::inflection::lang::StringFilterUtil::unaccent(&result, u"√°büê∞c")));
}

TEST_CASE("StringFilterUtilTest#testEqualIgnoreCaseAndAllAccents")
{
    REQUIRE(::inflection::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(u"Istanbul", u"istanbul", ::inflection::util::LocaleUtils::ENGLISH()));
    REQUIRE(::inflection::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(u"resume", u"R√©sum√©", ::inflection::util::LocaleUtils::ENGLISH()));
    REQUIRE(!::inflection::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(u"Istanbul", u"istanbul", ::inflection::util::LocaleUtils::TURKISH()));
    REQUIRE(::inflection::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(u"Istanbul", u"ƒ±stanbul", ::inflection::util::LocaleUtils::TURKISH()));
    REQUIRE(::inflection::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(u"ƒ∞stanbul", u"istanbul", ::inflection::util::LocaleUtils::TURKISH()));
}
